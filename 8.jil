8a) Develop a Julia program to evaluate expressions consisting of
rational,irrational number and floating point numbers.

function eval_expr(expr)
# Parse the expression using Julia's built-in parser
ast = Meta.parse(expr)
# Evaluate the expression using Julia's built-in evaluator
result = eval(ast)
# Return the result as a Float64
return Float64(result)
end
# Test cases
println(eval_expr("2 + 3"))
println(eval_expr("sqrt(2) * pi"))
println(eval_expr("exp(1) / 2"))
println(eval_expr("sin(pi / 4)"))
println(eval_expr("cos(pi / 3)"))
println(eval_expr("1 / 3 + 2 / 5"))
println(eval_expr("(1 + sqrt(2)) * (1 - sqrt(2))"))
OUTPUT

8b) Develop a Julia program to determine the following properties of a matrix:
determinant,inverse,rank,upper& lower triangular matrix, diagonal
elements,Euclidean norm and square root of a matrix..
using LinearAlgebra

function matrix_properties(A)
n = size(A, 1)
# Determinant
detA = det(A)
# Inverse
invA = inv(A)
# Rank
rankA = rank(A)
# Upper and Lower Triangular Matrices
U, L = triu(A)
# Diagonal Elements
diagA = diag(A)
# Euclidean Norm
normA = norm(A)
# Square Root
sqrtA = sqrt(A)
return detA, invA, rankA, U, L, diagA, normA, sqrtA
end
A = [3.0 2.0 -1.0; 1.0 0.0 2.0; 0.0 -1.0 1.0]
detA, invA, rankA, U, L, diagA, normA, sqrtA = matrix_properties(A)
println("Determinant: ", detA)
println("Inverse: ", invA)
println("Rank: ", rankA)
println("Upper Triangular Matrix: ", U)
println("Lower Triangular Matrix: ", L)
println("Diagonal Elements: ", diagA)
println("Euclidean Norm: ", normA)
println("Square Root: ", sqrtA)
OUTPUt
